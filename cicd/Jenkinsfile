pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'cr.yandex/crppq9qttclm6v54ocop'
        FRONTEND_DIR = 'frontend' // Путь к проекту фронтенда
        BACKEND_DIR = 'backend/Service'   // Путь к проекту бэкенда
        DOTNET_VERSION = '6.0'    // Версия .NET
        PUBLISH_OUTPUT_DIR = 'publish' // Папка для опубликованных файлов
        DOCKER_IMAGE_FRONTEND = "${DOCKER_REGISTRY}/frontend-app:${BUILD_NUMBER}"

        DOCKER_IMAGE_BACKEND = "${DOCKER_REGISTRY}/backend-app:${BUILD_NUMBER}"

        YC_OAUTH_TOKEN = 'y0__xCC7vykBhjB3RMg852KmxJg7wFn7smq84JZ46GWZN-qbUbBMA'
        
    }

    stages {
            stage('Checkout') {
                steps {
                    checkout scm
                }
            }

            // stage('Build Frontend') {
            //     steps {
            //         script {
            //             echo 'Сборка фронтенда...'
            //             dir(FRONTEND_DIR) {
            //                 sh 'dotnet restore'
            //                 sh 'dotnet build --configuration Release'
            //             }
            //         }
            //     }
            // }

            stage('Build Backend') {
                steps {
                    script {
                        echo 'Сборка бэкенда...'
                        dir(BACKEND_DIR) {
                            sh 'ls -l /var/lib/jenkins/workspace/Build/backend/Service/'
                            sh 'dotnet restore'
                            sh 'dotnet build --configuration Release'
                        }
                    }
                }
            }

   

        // stage('Publish Frontend') {
        //     steps {
        //         script {
        //             echo 'Публикация фронтенда...'
        //             dir(FRONTEND_DIR) {
        //                 sh "dotnet publish --configuration Release --output ${PUBLISH_OUTPUT_DIR}/frontend"
        //             }
        //         }
        //     }
        // }

        stage('Publish Backend') {
            steps {
                script {
                    echo 'Публикация бэкенда...'
                    dir(BACKEND_DIR) {
                        sh "dotnet publish --configuration Release --output ${PUBLISH_OUTPUT_DIR}/backend"
                    }
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    echo 'Сборка Docker-образов...'
                    // Сборка образа для фронтенда
                    dir(FRONTEND_DIR) {
                        sh """
                            docker build -t ${DOCKER_IMAGE_FRONTEND} .
                        """
                    }
                    // Сборка образа для бэкенда
                    dir(BACKEND_DIR) {
                        sh """
                            docker build -t ${DOCKER_IMAGE_BACKEND} .
                        """
                    }
                }
            }
        }

        stage(' Auth Yandex Container Registry') {
            steps {
                script {
                    // sh "echo ${YC_OAUTH_TOKEN} | docker login --username oauth --password-stdin cr.yandex"
                    sh'''
                    sudo docker login cr.yandex \
                    --username iam \
                    --password t1.9euelZrInc6UnZmLmc2Sj8iNnI_Ol-3rnpWazJqJnM2bxsuMyZCOypiNjpHl8_deIhpB-e8UC080_t3z9x5RF0H57xQLTzT-zef1656Vmo2YipqYyceRmZ2Xi8qZypuW7_zF656Vmo2YipqYyceRmZ2Xi8qZypuW.JZbPYumIm42auTeshXUIY0q2gVlouh6mdQDJ6UF6ZsU2q_NQys1C2SKPiKWRMTAhYDz9mKTr1n35yyeFc-lOCA
                    '''                  
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    echo 'Публикация Docker-образов в реестр...'
                    // sh "   yc container image create --name frontend-app --path ./ --tag 48 "
                     sh "sudo docker push ${DOCKER_IMAGE_FRONTEND}"
                    // Публикация образа бэкенда
                     sh "sudo docker push ${DOCKER_IMAGE_BACKEND}"
                }
            }
    
        }
    }
    post {
        success {
            // Действия после успешного завершения пайплайна
            echo 'Build and deploy completed successfully!'
        }
        failure {
            // Действия в случае ошибки
            echo 'Build or deploy failed!'
        }
    }
}