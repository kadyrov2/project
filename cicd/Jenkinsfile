pipeline {
    agent any

    environment {
        FRONTEND_DIR = 'frontend'  
        BACKEND_DIR = 'backend'   
        BUILD_CONFIGURATION = 'Release'  

        // Укажите ID вашего реестра в Yandex Container Registry
        YC_REGISTRY_ID = 'crppq9qttclm6v54ocop'
        
        // Укажите имя вашего образа
        IMAGE_FRONTEND = 'frontend'
        
        // Укажите тег для образа
        DOCKER_IMAGE_TAG = '1.0.0'
        
                // Укажите полное имя репозитория в Yandex Container Registry
        YC_REPOSITORY = "cr.yandex/${YC_REGISTRY_ID}/${IMAGE_FRONTEND}"


        YC_OAUTH_TOKEN = 'y0__xCC7vykBhjB3RMg852KmxJg7wFn7smq84JZ46GWZN-qbUbBMA'
        
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

         stage('Build Frontend') {
            steps {
                dir(env.FRONTEND_DIR) {
                    sh 'dotnet restore'
                    sh "dotnet build --configuration ${env.BUILD_CONFIGURATION}"
                    sh 'dotnet publish --configuration Release --output ./publish'
                }
            }
        }

          stage(' Auth Yandex Container Registry') {
            steps {
                script {
                    sh "echo ${YC_OAUTH_TOKEN} | docker login --username oauth --password-stdin cr.yandex"
                }
            }
        }

            stage('Push') {
                steps {
                    script {
                        // Тегируем образ для пуша в Yandex Container Registry
                        sh "docker tag ${IMAGE_FRONTEND}:${DOCKER_IMAGE_TAG} ${YC_REPOSITORY}:${DOCKER_IMAGE_TAG}"
                        
                        // Пушим образ в Yandex Container Registry
                        sh "docker push ${YC_REPOSITORY}:${DOCKER_IMAGE_TAG}"
                    }
                }
             }

    }

    post {
        success {
            // Действия после успешного завершения пайплайна
            echo 'Build and deploy completed successfully!'
        }
        failure {
            // Действия в случае ошибки
            echo 'Build or deploy failed!'
        }
    }
}