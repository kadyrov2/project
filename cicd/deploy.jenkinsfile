pipeline {
    agent any

    environment {
        CLUSTER_NAME = 'tim-cluster'
        NAMESPACE = 'default'
        HELM_RELEASE_NAME = 'nginx'
        HELM_CHART_PATH = './cicd/helm/'
        SA_NAME = 'container-registry-sa' 
    }

    parameters {
        booleanParam(name: 'DELETE_DEPLOY', defaultValue: false, description: 'Удалить деплой ?')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/kadyrov2/project.git'
            }
        }

        stage('Configure kubectl') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'yandex-cloud-registry-key', variable: 'SA_KEY_FILE')]) {
                        sh """
                            ~/yandex-cloud/bin/yc config set service-account-key ${SA_KEY_FILE}
                        """
                    }
                    sh """
                        ~/yandex-cloud/bin/yc managed-kubernetes cluster get-credentials ${CLUSTER_NAME} --external --force
                    """
                }
            }
        }

        stage('login Yandex Container Registry') {
            steps {
                script {

                    IAM_TOKEN = sh(script: ' ~/yandex-cloud/bin/yc iam create-token', returnStdout: true).trim()

                    sh """
                        sudo docker login cr.yandex \
                            --username iam \
                            --password ${IAM_TOKEN}
                    """
                }
            }
        }

        stage('Create JSON Key') {
            steps {
                script {
                    // Создаем JSON-ключ для сервисного аккаунта
                    sh """
                        ~/yandex-cloud/bin/yc iam key create --service-account-name ${SA_NAME} --output key.json
                    """

                    // Аутентифицируемся в Yandex Container Registry с помощью JSON-ключа
                    sh """
                        cat key.json | docker login --username json_key --password-stdin cr.yandex
                    """

                    // Удаляем JSON-ключ после использования (опционально, для безопасности)
                    sh """
                        rm -f key.json
                    """
                }
            }
        }

        stage('Deploy') {
              when {
                expression { params.DELETE_DEPLOY == false }
            }
            steps {
                script {
                    sh """
                        helm upgrade --install ${HELM_RELEASE_NAME} ${HELM_CHART_PATH} \
                            --namespace ${NAMESPACE} \
                            --create-namespace \
                            --set replicaCount=2 \
                            --set service.type=LoadBalancer
                    """
                }
            }
        }

        stage('Optional: Delete Deployment') {
            when {
                expression { params.DELETE_DEPLOY == true }
            }
            steps {
                script {
                    // Удалите релиз Helm, если параметр DELETE_DEPLOY равен true
                    sh """
                        helm uninstall ${HELM_RELEASE_NAME} --namespace ${NAMESPACE}
                    """
                    echo "Деплой ${HELM_RELEASE_NAME} успешно удален."
                }
            }
        }
    }

    post {
        success {
            echo 'Nginx успешно развернут с помощью Helm в Yandex Managed Kubernetes!'
        }
        failure {
            echo 'Ошибка при развертывании Nginx с помощью Helm.'
        }
    }
}